"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/useFortuneState.ts":
/*!**********************************!*\
  !*** ./hooks/useFortuneState.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useFortuneState: function() { return /* binding */ useFortuneState; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _context_FortuneContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../context/FortuneContext */ \"(app-pages-browser)/./context/FortuneContext.tsx\");\n\n\nconst useFortuneState = (param)=>{\n    let { storageKey, keepAlive = false, initialState = null } = param;\n    const { state: globalState, updateState } = (0,_context_FortuneContext__WEBPACK_IMPORTED_MODULE_1__.useFortuneContext)();\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        return initialState || {\n            formData: {},\n            result: \"\",\n            loading: false\n        };\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (keepAlive && \"object\" !== \"undefined\") {\n            // 更新全局状态\n            updateState(storageKey, state);\n            // 持久化到localStorage\n            localStorage.setItem(storageKey, JSON.stringify({\n                ...state,\n                timestamp: Date.now()\n            }));\n            // 监听storage事件，以便在其他标签页更新时同步状态\n            const handleStorageChange = (e)=>{\n                if (e.key === storageKey && e.newValue) {\n                    try {\n                        const newState = JSON.parse(e.newValue);\n                        if (newState.timestamp > (state.timestamp || 0)) {\n                            setState(newState);\n                        }\n                    } catch (error) {\n                        console.error(\"解析存储的状态失败:\", error);\n                    }\n                }\n            };\n            window.addEventListener(\"storage\", handleStorageChange);\n            return ()=>{\n                // 在组件卸载时保存最新状态\n                const finalState = {\n                    ...state,\n                    timestamp: Date.now()\n                };\n                localStorage.setItem(storageKey, JSON.stringify(finalState));\n                window.removeEventListener(\"storage\", handleStorageChange);\n            };\n        }\n    }, [\n        state,\n        storageKey,\n        keepAlive,\n        updateState\n    ]);\n    const setFormData = (formData)=>{\n        setState((prev)=>({\n                ...prev,\n                formData\n            }));\n    };\n    const setResult = (result)=>{\n        setState((prev)=>({\n                ...prev,\n                result\n            }));\n    };\n    const setLoading = (loading)=>{\n        setState((prev)=>({\n                ...prev,\n                loading\n            }));\n    };\n    return {\n        state,\n        setFormData,\n        setResult,\n        setLoading\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZUZvcnR1bmVTdGF0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTRDO0FBQ2tCO0FBY3ZELE1BQU1HLGtCQUFrQjtRQUFDLEVBQUVDLFVBQVUsRUFBRUMsWUFBWSxLQUFLLEVBQUVDLGVBQWUsSUFBSSxFQUEwQjtJQUM1RyxNQUFNLEVBQUVDLE9BQU9DLFdBQVcsRUFBRUMsV0FBVyxFQUFFLEdBQUdQLDBFQUFpQkE7SUFDN0QsTUFBTSxDQUFDSyxPQUFPRyxTQUFTLEdBQUdWLCtDQUFRQSxDQUFlO1FBQy9DLE9BQU9NLGdCQUFnQjtZQUNyQkssVUFBVSxDQUFDO1lBQ1hDLFFBQVE7WUFDUkMsU0FBUztRQUNYO0lBQ0Y7SUFFQVosZ0RBQVNBLENBQUM7UUFDUixJQUFJSSxhQUFhLGFBQWtCLGFBQWE7WUFDOUMsU0FBUztZQUNUSSxZQUFZTCxZQUFZRztZQUN4QixtQkFBbUI7WUFDbkJPLGFBQWFDLE9BQU8sQ0FBQ1gsWUFBWVksS0FBS0MsU0FBUyxDQUFDO2dCQUM5QyxHQUFHVixLQUFLO2dCQUNSVyxXQUFXQyxLQUFLQyxHQUFHO1lBQ3JCO1lBRUEsOEJBQThCO1lBQzlCLE1BQU1DLHNCQUFzQixDQUFDQztnQkFDM0IsSUFBSUEsRUFBRUMsR0FBRyxLQUFLbkIsY0FBY2tCLEVBQUVFLFFBQVEsRUFBRTtvQkFDdEMsSUFBSTt3QkFDRixNQUFNQyxXQUFXVCxLQUFLVSxLQUFLLENBQUNKLEVBQUVFLFFBQVE7d0JBQ3RDLElBQUlDLFNBQVNQLFNBQVMsR0FBSVgsQ0FBQUEsTUFBTVcsU0FBUyxJQUFJLElBQUk7NEJBQy9DUixTQUFTZTt3QkFDWDtvQkFDRixFQUFFLE9BQU9FLE9BQU87d0JBQ2RDLFFBQVFELEtBQUssQ0FBQyxjQUFjQTtvQkFDOUI7Z0JBQ0Y7WUFDRjtZQUVBRSxPQUFPQyxnQkFBZ0IsQ0FBQyxXQUFXVDtZQUVuQyxPQUFPO2dCQUNMLGVBQWU7Z0JBQ2YsTUFBTVUsYUFBYTtvQkFDakIsR0FBR3hCLEtBQUs7b0JBQ1JXLFdBQVdDLEtBQUtDLEdBQUc7Z0JBQ3JCO2dCQUNBTixhQUFhQyxPQUFPLENBQUNYLFlBQVlZLEtBQUtDLFNBQVMsQ0FBQ2M7Z0JBQ2hERixPQUFPRyxtQkFBbUIsQ0FBQyxXQUFXWDtZQUN4QztRQUNGO0lBQ0YsR0FBRztRQUFDZDtRQUFPSDtRQUFZQztRQUFXSTtLQUFZO0lBRTlDLE1BQU13QixjQUFjLENBQUN0QjtRQUNuQkQsU0FBU3dCLENBQUFBLE9BQVM7Z0JBQUUsR0FBR0EsSUFBSTtnQkFBRXZCO1lBQVM7SUFDeEM7SUFFQSxNQUFNd0IsWUFBWSxDQUFDdkI7UUFDakJGLFNBQVN3QixDQUFBQSxPQUFTO2dCQUFFLEdBQUdBLElBQUk7Z0JBQUV0QjtZQUFPO0lBQ3RDO0lBRUEsTUFBTXdCLGFBQWEsQ0FBQ3ZCO1FBQ2xCSCxTQUFTd0IsQ0FBQUEsT0FBUztnQkFBRSxHQUFHQSxJQUFJO2dCQUFFckI7WUFBUTtJQUN2QztJQUVBLE9BQU87UUFDTE47UUFDQTBCO1FBQ0FFO1FBQ0FDO0lBQ0Y7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2hvb2tzL3VzZUZvcnR1bmVTdGF0ZS50cz8xYjBlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VGb3J0dW5lQ29udGV4dCB9IGZyb20gJy4uL2NvbnRleHQvRm9ydHVuZUNvbnRleHQnO1xuXG5pbnRlcmZhY2UgRm9ydHVuZVN0YXRlIHtcbiAgZm9ybURhdGE6IGFueTtcbiAgcmVzdWx0OiBzdHJpbmc7XG4gIGxvYWRpbmc6IGJvb2xlYW47XG59XG5cbmludGVyZmFjZSBVc2VGb3J0dW5lU3RhdGVPcHRpb25zIHtcbiAgc3RvcmFnZUtleTogc3RyaW5nO1xuICBrZWVwQWxpdmU/OiBib29sZWFuO1xuICBpbml0aWFsU3RhdGU/OiBGb3J0dW5lU3RhdGUgfCBudWxsO1xufVxuXG5leHBvcnQgY29uc3QgdXNlRm9ydHVuZVN0YXRlID0gKHsgc3RvcmFnZUtleSwga2VlcEFsaXZlID0gZmFsc2UsIGluaXRpYWxTdGF0ZSA9IG51bGwgfTogVXNlRm9ydHVuZVN0YXRlT3B0aW9ucykgPT4ge1xuICBjb25zdCB7IHN0YXRlOiBnbG9iYWxTdGF0ZSwgdXBkYXRlU3RhdGUgfSA9IHVzZUZvcnR1bmVDb250ZXh0KCk7XG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGU8Rm9ydHVuZVN0YXRlPigoKSA9PiB7XG4gICAgcmV0dXJuIGluaXRpYWxTdGF0ZSB8fCB7XG4gICAgICBmb3JtRGF0YToge30sXG4gICAgICByZXN1bHQ6ICcnLFxuICAgICAgbG9hZGluZzogZmFsc2VcbiAgICB9O1xuICB9KTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChrZWVwQWxpdmUgJiYgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIOabtOaWsOWFqOWxgOeKtuaAgVxuICAgICAgdXBkYXRlU3RhdGUoc3RvcmFnZUtleSwgc3RhdGUpO1xuICAgICAgLy8g5oyB5LmF5YyW5YiwbG9jYWxTdG9yYWdlXG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShzdG9yYWdlS2V5LCBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICB0aW1lc3RhbXA6IERhdGUubm93KClcbiAgICAgIH0pKTtcblxuICAgICAgLy8g55uR5ZCsc3RvcmFnZeS6i+S7tu+8jOS7peS+v+WcqOWFtuS7luagh+etvumhteabtOaWsOaXtuWQjOatpeeKtuaAgVxuICAgICAgY29uc3QgaGFuZGxlU3RvcmFnZUNoYW5nZSA9IChlOiBTdG9yYWdlRXZlbnQpID0+IHtcbiAgICAgICAgaWYgKGUua2V5ID09PSBzdG9yYWdlS2V5ICYmIGUubmV3VmFsdWUpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgbmV3U3RhdGUgPSBKU09OLnBhcnNlKGUubmV3VmFsdWUpO1xuICAgICAgICAgICAgaWYgKG5ld1N0YXRlLnRpbWVzdGFtcCA+IChzdGF0ZS50aW1lc3RhbXAgfHwgMCkpIHtcbiAgICAgICAgICAgICAgc2V0U3RhdGUobmV3U3RhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCfop6PmnpDlrZjlgqjnmoTnirbmgIHlpLHotKU6JywgZXJyb3IpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIFxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3N0b3JhZ2UnLCBoYW5kbGVTdG9yYWdlQ2hhbmdlKTtcbiAgICAgIFxuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgLy8g5Zyo57uE5Lu25Y246L295pe25L+d5a2Y5pyA5paw54q25oCBXG4gICAgICAgIGNvbnN0IGZpbmFsU3RhdGUgPSB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpXG4gICAgICAgIH07XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHN0b3JhZ2VLZXksIEpTT04uc3RyaW5naWZ5KGZpbmFsU3RhdGUpKTtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3N0b3JhZ2UnLCBoYW5kbGVTdG9yYWdlQ2hhbmdlKTtcbiAgICAgIH07XG4gICAgfVxuICB9LCBbc3RhdGUsIHN0b3JhZ2VLZXksIGtlZXBBbGl2ZSwgdXBkYXRlU3RhdGVdKTtcblxuICBjb25zdCBzZXRGb3JtRGF0YSA9IChmb3JtRGF0YTogYW55KSA9PiB7XG4gICAgc2V0U3RhdGUocHJldiA9PiAoeyAuLi5wcmV2LCBmb3JtRGF0YSB9KSk7XG4gIH07XG5cbiAgY29uc3Qgc2V0UmVzdWx0ID0gKHJlc3VsdDogc3RyaW5nKSA9PiB7XG4gICAgc2V0U3RhdGUocHJldiA9PiAoeyAuLi5wcmV2LCByZXN1bHQgfSkpO1xuICB9O1xuXG4gIGNvbnN0IHNldExvYWRpbmcgPSAobG9hZGluZzogYm9vbGVhbikgPT4ge1xuICAgIHNldFN0YXRlKHByZXYgPT4gKHsgLi4ucHJldiwgbG9hZGluZyB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBzdGF0ZSxcbiAgICBzZXRGb3JtRGF0YSxcbiAgICBzZXRSZXN1bHQsXG4gICAgc2V0TG9hZGluZ1xuICB9O1xufTsiXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VGb3J0dW5lQ29udGV4dCIsInVzZUZvcnR1bmVTdGF0ZSIsInN0b3JhZ2VLZXkiLCJrZWVwQWxpdmUiLCJpbml0aWFsU3RhdGUiLCJzdGF0ZSIsImdsb2JhbFN0YXRlIiwidXBkYXRlU3RhdGUiLCJzZXRTdGF0ZSIsImZvcm1EYXRhIiwicmVzdWx0IiwibG9hZGluZyIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJKU09OIiwic3RyaW5naWZ5IiwidGltZXN0YW1wIiwiRGF0ZSIsIm5vdyIsImhhbmRsZVN0b3JhZ2VDaGFuZ2UiLCJlIiwia2V5IiwibmV3VmFsdWUiLCJuZXdTdGF0ZSIsInBhcnNlIiwiZXJyb3IiLCJjb25zb2xlIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImZpbmFsU3RhdGUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwic2V0Rm9ybURhdGEiLCJwcmV2Iiwic2V0UmVzdWx0Iiwic2V0TG9hZGluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useFortuneState.ts\n"));

/***/ })

});